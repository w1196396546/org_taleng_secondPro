<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
        <!--启用组件扫描-->
        <context:component-scan base-package="org.java"/>
    <!--加载属性类文件-->
    <context:property-placeholder location="db.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${url}"/>
        <property name="driverClassName" value="${driver}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${pwd}"/>
    </bean>
    <!--配置sqlsessionfactory，这是产生数据库连接的spring容器工厂-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--给实体类起别名-->
        <property name="typeAliasesPackage" value="org.java.entity"/>

    </bean>
    <!--配置自动扫描mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定路径-->
        <property name="basePackage" value="org.java.dao"/>
    </bean>
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指定数据从哪里来-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--配置事务通知属性
    -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--配置事务通知属性
        tx:method:指定什么方法
        name:什么方法
        propagation:做什么操作
        -->
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--配置aop切面-->
    <aop:config>
        <!--配置切面执行的条件，在哪个包下面运行，就开始执行-->
        <aop:pointcut id="beanName" expression="execution(* org.java.service.*.*(..))"/>
        <!--如果我们的切面触发，要调用哪一个通知运行
        pointcut-ref：表示哪个切入点切入
        advice-ref：条件满足，吊桶哪个通知执行
        -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="beanName"/>
    </aop:config>
</beans>    